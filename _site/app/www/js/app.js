// Generated by CoffeeScript 1.4.0
(function() {
  var $alarmTime, $cancelButton, $submitButton, alarmComplete, alarmIsSet, checkAlarmAgainstTime, detectDeepSleep, injectThoughts, onDeviceReady, toggleAlarm;

  document.addEventListener("deviceready", onDeviceReady, false);

  onDeviceReady = function() {
    return alert("device ready");
  };

  window.addEventListener("load", function() {
    return new FastClick(document.body);
  }, false);

  $("input").blur(function() {
    return window.scrollTo(0, 0);
  });

  alarmIsSet = false;

  $alarmTime = $("#alarm-time");

  $submitButton = $("#alarm-submit");

  $cancelButton = $("#alarm-cancel");

  $submitButton.bind("click", function() {
    toggleAlarm();
    return detectDeepSleep();
  });

  $cancelButton.bind("click", function() {
    return toggleAlarm();
  });

  toggleAlarm = function() {
    var alarmTime, hour, mins, splitAlarmTime;
    alarmTime = $alarmTime.val();
    splitAlarmTime = alarmTime.split(":");
    hour = parseInt(splitAlarmTime[0]);
    mins = parseInt(splitAlarmTime[1]);
    if (!alarmIsSet) {
      alarmIsSet = true;
      $(".main").fadeOut(1000, function() {
        return $(".night-mode").fadeIn(1000);
      });
      window.ticker = setInterval(function() {
        return checkAlarmAgainstTime(hour, mins);
      }, 1000);
      return console.log("Alarm is set for " + hour + ":" + mins);
    } else {
      alarmIsSet = false;
      $(".night-mode").fadeOut(1000, function() {
        return $(".main").fadeIn(1000);
      });
      clearInterval(window.ticker);
      return console.log("Alarm cancelled");
    }
  };

  checkAlarmAgainstTime = function(hour, minutes) {
    var currentHour, currentMins, date;
    date = new Date;
    currentHour = date.getHours();
    currentMins = date.getMinutes();
    if (hour === currentHour && minutes === currentMins) {
      return alarmComplete();
    } else {
      return console.log("tick");
    }
  };

  alarmComplete = function() {
    navigator.notification.vibrate(1000);
    return navigator.notification.alert("Wake up, Sheeple", toggleAlarm(), "Lucid", "Dismiss");
  };

  injectThoughts = function() {
    var cycleDuration;
    cycleDuration = 360000;
    return setInterval(function() {
      return console.log("Injecting thoughts...");
    }, cycleDuration);
  };

  detectDeepSleep = function() {
    var onError, onSuccess, options, watchID;
    onSuccess = function(acceleration) {
      return alert("Acc. X: " + acceleration.x + "\n" + "Acc. Y: " + acceleration.y + "\n" + "Acc. Z: " + acceleration.z + "\n" + "Timestamp: " + acceleration.timestamp + "\n");
    };
    onError = function() {
      return alert("Error!");
    };
    options = {
      frequency: 3000
    };
    return watchID = navigator.accelerometer.watchAcceleration(onSuccess, onError, options);
  };

}).call(this);
